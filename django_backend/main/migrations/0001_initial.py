# Generated by Django 3.0 on 2020-07-25 09:46

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('photo', models.URLField(blank=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdvancedWorkshop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clg_code', models.CharField(max_length=250)),
                ('name', models.CharField(max_length=512)),
                ('emailid', models.CharField(max_length=250)),
                ('gender', models.CharField(max_length=250)),
                ('contact_num', models.CharField(max_length=11)),
                ('alt_contact1', models.CharField(blank=True, max_length=11, null=True)),
                ('designation', models.CharField(max_length=250)),
                ('role', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'advanced_workshop',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AICTE_list',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institute_name', models.TextField()),
                ('state', models.TextField()),
                ('district', models.TextField()),
                ('city', models.TextField()),
                ('full_address', models.TextField()),
                ('latitude', models.TextField()),
                ('longitude', models.TextField()),
                ('normalised_ins_name', models.TextField()),
                ('email', models.TextField()),
            ],
            options={
                'db_table': 'aicte_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='algo_detail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demo_module_cnt', models.IntegerField()),
                ('will_ttl_wrkshp_cnt', models.IntegerField()),
                ('aval_ttl_wrkshp_cnt', models.IntegerField()),
                ('willcriteria', models.TextField()),
                ('availcriteria', models.TextField()),
            ],
            options={
                'db_table': 'algo_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlumniEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('year', models.CharField(blank=True, max_length=50, null=True)),
                ('email_flag', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'alumni_email',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='app_normalised_name',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('college_name', models.TextField(blank=True, null=True)),
                ('normalised_ins_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'normalized_name',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AppElsiCollegeDtls',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False, unique=True)),
                ('clg_code', models.TextField(blank=True, null=True)),
                ('region_id', models.IntegerField(blank=True, null=True)),
                ('workshop_id', models.IntegerField(blank=True, null=True)),
                ('college_name', models.TextField(blank=True, null=True)),
                ('abbreviation', models.TextField(blank=True, null=True)),
                ('district', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('college_type', models.TextField(blank=True, null=True)),
                ('principal_meet', models.IntegerField(blank=True, null=True)),
                ('robots_given', models.IntegerField(blank=True, null=True)),
                ('eyic_allowed', models.TextField(blank=True, null=True)),
                ('eyrtc_allowed', models.IntegerField(blank=True, null=True)),
                ('tbt_allowed', models.IntegerField(blank=True, null=True)),
                ('content_allowed', models.TextField(blank=True, null=True)),
                ('legal_docs', models.TextField(blank=True, null=True)),
                ('legal_docs_remarks', models.TextField(blank=True, null=True)),
                ('loi_status', models.IntegerField(blank=True, null=True)),
                ('loi_format', models.IntegerField(blank=True, null=True)),
                ('loi_remarks', models.TextField(blank=True, null=True)),
                ('po_status', models.TextField(blank=True, null=True)),
                ('po_remark', models.TextField(blank=True, null=True)),
                ('wo_reg', models.TextField(blank=True, null=True)),
                ('wo_invite', models.TextField(blank=True, null=True)),
                ('wo_confirm', models.TextField(blank=True, null=True)),
                ('wo_attend', models.IntegerField(blank=True, null=True)),
                ('hardware_given', models.TextField(blank=True, null=True)),
                ('lab_inaugurated', models.IntegerField(blank=True, null=True)),
                ('phase', models.TextField(blank=True, null=True)),
                ('eys2016_invites', models.TextField(blank=True, null=True)),
                ('team_verify', models.IntegerField(blank=True, null=True)),
                ('created_at', models.TextField(blank=True, null=True)),
                ('updated_at', models.TextField(blank=True, null=True)),
                ('normalised_ins_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'elsi_college_dtls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AppTbtCollegeDtls',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('elsi_clg_id', models.IntegerField(blank=True, null=True)),
                ('region_id', models.TextField(blank=True, null=True)),
                ('college_name', models.TextField(blank=True, null=True)),
                ('abbreviation', models.TextField(blank=True, null=True)),
                ('district', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('pincode', models.TextField(blank=True, null=True)),
                ('college_type', models.TextField(blank=True, null=True)),
                ('principal_meet', models.IntegerField(blank=True, null=True)),
                ('robots_given', models.IntegerField(blank=True, null=True)),
                ('tbt_allowed', models.IntegerField(blank=True, null=True)),
                ('tbt_count', models.IntegerField(blank=True, null=True)),
                ('completed', models.IntegerField(blank=True, null=True)),
                ('legal_docs', models.IntegerField(blank=True, null=True)),
                ('legal_docs_remarks', models.TextField(blank=True, null=True)),
                ('loi_status', models.IntegerField(blank=True, null=True)),
                ('po_status', models.TextField(blank=True, null=True)),
                ('po_remark', models.TextField(blank=True, null=True)),
                ('wo_reg', models.TextField(blank=True, null=True)),
                ('wo_invite', models.TextField(blank=True, null=True)),
                ('wo_confirm', models.TextField(blank=True, null=True)),
                ('wo_attend', models.IntegerField(blank=True, null=True)),
                ('phase', models.TextField(blank=True, null=True)),
                ('lab_inaugrated', models.IntegerField(blank=True, null=True)),
                ('created_at', models.TextField(blank=True, null=True)),
                ('updated_at', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbt_college_dtls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AppWorkshopDtls',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('region_id', models.IntegerField(blank=True, null=True)),
                ('clg_id', models.IntegerField(blank=True, null=True)),
                ('active', models.TextField(blank=True, null=True)),
                ('workshop_team', models.TextField(blank=True, null=True)),
                ('start_date', models.TextField(blank=True, null=True)),
                ('end_date', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'workshop_dtls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AppWorkshopParticipants',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('workshop_id', models.IntegerField(blank=True, null=True)),
                ('clg_id', models.IntegerField(blank=True, null=True)),
                ('tch_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'workshop_participants',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BackupElsiCollegeDtls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clg_code', models.CharField(blank=True, max_length=512, null=True)),
                ('region_id', models.IntegerField(blank=True, null=True)),
                ('workshop_id', models.IntegerField()),
                ('college_name', models.CharField(max_length=1024)),
                ('abbreviation', models.CharField(blank=True, max_length=128, null=True)),
                ('district', models.CharField(blank=True, max_length=256, null=True)),
                ('address', models.CharField(blank=True, max_length=1024, null=True)),
                ('state', models.CharField(blank=True, max_length=512, null=True)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('college_type', models.CharField(blank=True, max_length=256, null=True)),
                ('principal_meet', models.IntegerField()),
                ('robots_given', models.IntegerField(blank=True, null=True)),
                ('eyic_allowed', models.IntegerField()),
                ('eyrtc_allowed', models.IntegerField()),
                ('tbt_allowed', models.IntegerField()),
                ('content_allowed', models.IntegerField()),
                ('legal_docs', models.IntegerField(blank=True, null=True)),
                ('legal_docs_remarks', models.CharField(blank=True, max_length=1024, null=True)),
                ('loi_status', models.IntegerField()),
                ('loi_format', models.IntegerField(blank=True, null=True)),
                ('loi_remarks', models.CharField(blank=True, max_length=1024, null=True)),
                ('po_status', models.IntegerField(blank=True, null=True)),
                ('po_remark', models.CharField(blank=True, max_length=1024, null=True)),
                ('wo_reg', models.IntegerField()),
                ('wo_invite', models.IntegerField()),
                ('wo_confirm', models.IntegerField()),
                ('wo_attend', models.IntegerField()),
                ('hardware_given', models.CharField(blank=True, max_length=1024, null=True)),
                ('lab_inaugurated', models.IntegerField()),
                ('phase', models.IntegerField()),
                ('eys2016_invites', models.IntegerField()),
                ('team_verify', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'backup_elsi_college_dtls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CollegesToContactToEstablishElsi',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('college_name', models.CharField(blank=True, max_length=512, null=True)),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('designation', models.CharField(blank=True, max_length=512, null=True)),
                ('email', models.CharField(blank=True, max_length=512, null=True)),
                ('rank', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'colleges_to_contact_to_establish_elsi',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tch_id', models.IntegerField(blank=True, null=True)),
                ('resources', models.TextField(blank=True, null=True)),
                ('curriculum', models.CharField(blank=True, max_length=20, null=True)),
                ('lab_exp', models.CharField(blank=True, max_length=20, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('lesson_id', models.IntegerField(blank=True, null=True)),
                ('lesson_plan_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'con_feedback',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConLatex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tch_id', models.IntegerField(blank=True, null=True)),
                ('clg_id', models.IntegerField(blank=True, null=True)),
                ('down_date', models.CharField(blank=True, max_length=200, null=True)),
                ('flag', models.IntegerField()),
                ('upload_date', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('accept_reject', models.IntegerField()),
                ('remark', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'con_latex',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConLessonCreate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lp_name', models.TextField(blank=True, null=True)),
                ('lp_plan', models.CharField(blank=True, max_length=100, null=True)),
                ('refer_content', models.TextField()),
                ('available', models.IntegerField()),
                ('tch_count', models.IntegerField(blank=True, null=True)),
                ('i_agree', models.IntegerField()),
                ('phase', models.IntegerField()),
                ('launch_date', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'con_lesson_create',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConLessonPlanList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024)),
                ('image_name', models.CharField(blank=True, max_length=1024, null=True)),
                ('short_intro', models.CharField(blank=True, max_length=2048, null=True)),
                ('intro_video_code', models.CharField(blank=True, max_length=512, null=True)),
                ('available', models.IntegerField()),
                ('student_chk', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'con_lesson_plan_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConLessonPlanLongContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_plan_id', models.IntegerField()),
                ('long_intro', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'con_lesson_plan_long_content',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConLpLessons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_plan_id', models.IntegerField()),
                ('display_num', models.IntegerField()),
                ('lesson_name', models.CharField(max_length=512)),
                ('video1_code', models.CharField(blank=True, max_length=512, null=True)),
                ('video1_name', models.CharField(blank=True, max_length=1024, null=True)),
                ('video2_code', models.CharField(blank=True, max_length=512, null=True)),
                ('video2_name', models.CharField(blank=True, max_length=1024, null=True)),
                ('html_content', models.TextField(blank=True, null=True)),
                ('down_tm', models.IntegerField()),
                ('count_tm', models.IntegerField()),
                ('down_rr', models.IntegerField()),
                ('count_rr', models.IntegerField()),
                ('down_qb', models.IntegerField()),
                ('count_qb', models.IntegerField()),
                ('down_qbs', models.IntegerField()),
                ('count_qbs', models.IntegerField()),
                ('down_le', models.IntegerField()),
                ('count_le', models.IntegerField()),
                ('down_les', models.IntegerField()),
                ('count_les', models.IntegerField(blank=True, null=True)),
                ('available', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'con_lp_lessons',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConProjectGeneric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024)),
                ('video_url', models.CharField(blank=True, max_length=1024, null=True)),
                ('type', models.IntegerField()),
                ('available', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'con_project_generic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConProjectList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024)),
                ('image_name', models.CharField(blank=True, max_length=1024, null=True)),
                ('report_name', models.CharField(max_length=50)),
                ('available', models.IntegerField()),
                ('count_project', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'con_project_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConProjectTopics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proj_id', models.IntegerField()),
                ('hardware', models.TextField()),
                ('software', models.TextField(blank=True, null=True)),
                ('authors', models.CharField(blank=True, max_length=1024, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('video_code', models.CharField(blank=True, max_length=512, null=True)),
                ('code_link', models.CharField(blank=True, max_length=512, null=True)),
                ('available', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'con_project_topics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tch_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('designation', models.CharField(blank=True, max_length=200, null=True)),
                ('photo', models.CharField(blank=True, max_length=100, null=True)),
                ('name_cheq', models.CharField(blank=True, max_length=200, null=True)),
                ('biography', models.TextField(blank=True, null=True)),
                ('branch', models.CharField(max_length=200)),
                ('ifsc', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'con_registration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConSuggestedTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tch_id', models.IntegerField(blank=True, null=True)),
                ('topic', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('choice', models.CharField(blank=True, max_length=200, null=True)),
                ('email_sent', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'con_suggested_topic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tch_id', models.IntegerField(blank=True, null=True)),
                ('clg_id', models.IntegerField(blank=True, null=True)),
                ('lesson_id', models.IntegerField(blank=True, null=True)),
                ('i_agree', models.IntegerField()),
                ('start_date', models.CharField(blank=True, max_length=200, null=True)),
                ('end_date', models.CharField(blank=True, max_length=200, null=True)),
                ('flag', models.IntegerField()),
                ('upload_date', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('difficulty', models.TextField(blank=True, null=True)),
                ('duration', models.TextField(blank=True, null=True)),
                ('presentation', models.TextField(blank=True, null=True)),
                ('lp8051', models.TextField(blank=True, null=True)),
                ('lparm', models.TextField(blank=True, null=True)),
                ('down_rev_les', models.IntegerField()),
                ('upload_rev_date', models.CharField(blank=True, max_length=256, null=True)),
                ('rev_upld_date', models.CharField(blank=True, max_length=200, null=True)),
                ('rev_status', models.TextField(blank=True, null=True)),
                ('rev_flag', models.IntegerField(blank=True, null=True)),
                ('accept_reject', models.IntegerField()),
                ('remark', models.TextField(blank=True, null=True)),
                ('plag', models.CharField(blank=True, max_length=100, null=True)),
                ('reg_status', models.IntegerField()),
                ('agreement', models.IntegerField(blank=True, null=True)),
                ('reviewer_name', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'con_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clg_id', models.IntegerField()),
                ('username', models.CharField(max_length=512, unique=True)),
                ('content', models.IntegerField()),
                ('down_tm', models.IntegerField()),
                ('down_rr', models.IntegerField()),
                ('down_qb', models.IntegerField()),
                ('down_qbs', models.IntegerField()),
                ('down_le', models.IntegerField()),
                ('down_les', models.IntegerField()),
                ('ie_mod', models.IntegerField()),
                ('down_tut_ppt', models.IntegerField()),
                ('down_tut_code', models.IntegerField()),
                ('down_tut_misc', models.IntegerField()),
                ('count_lecture', models.IntegerField()),
                ('down_project', models.IntegerField()),
                ('down_lesson_temp', models.IntegerField()),
                ('down_latex', models.IntegerField()),
                ('down_video_res', models.IntegerField()),
                ('down_stg1_temp', models.IntegerField()),
                ('down_res_tutorial', models.IntegerField()),
                ('create_content', models.IntegerField()),
                ('blockly', models.IntegerField(blank=True, null=True)),
                ('suggest', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_count',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentRegister',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clg_id', models.IntegerField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('contact', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('designation', models.IntegerField(blank=True, null=True)),
                ('department', models.IntegerField(blank=True, null=True)),
                ('upload', models.CharField(blank=True, max_length=40, null=True)),
                ('accept_reject', models.TextField(blank=True, null=True)),
                ('email_flag', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'content_register',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConTutorialCreate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tut_name', models.CharField(blank=True, max_length=100, null=True)),
                ('tut_plan', models.CharField(blank=True, max_length=100, null=True)),
                ('refer_content', models.TextField()),
                ('available', models.IntegerField()),
                ('tch_count', models.IntegerField(blank=True, null=True)),
                ('i_agree', models.IntegerField()),
                ('phase', models.IntegerField()),
                ('launch_date', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'con_tutorial_create',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConTutorialList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024)),
                ('image_name', models.CharField(blank=True, max_length=1024, null=True)),
                ('short_intro', models.CharField(blank=True, max_length=2048, null=True)),
                ('intro_video_code', models.CharField(blank=True, max_length=512, null=True)),
                ('available', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'con_tutorial_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConTutorialLongContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tut_id', models.IntegerField()),
                ('long_intro', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'con_tutorial_long_content',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConTutorialTopics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tut_id', models.IntegerField()),
                ('display_num', models.IntegerField()),
                ('topic_name', models.CharField(max_length=512)),
                ('video_code', models.CharField(blank=True, max_length=512, null=True)),
                ('html_content', models.TextField(blank=True, null=True)),
                ('down_code', models.IntegerField()),
                ('down_ppt', models.IntegerField()),
                ('down_misc', models.IntegerField()),
                ('count_ppt', models.IntegerField()),
                ('count_code', models.IntegerField()),
                ('count_misc', models.IntegerField()),
                ('available', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'con_tutorial_topics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConVideoStage0',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tch_id', models.IntegerField(blank=True, null=True)),
                ('video_link', models.TextField(blank=True, null=True)),
                ('submit_date', models.TextField()),
                ('status', models.CharField(max_length=50)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('flag', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'con_video_stage0',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='create_workshop',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('clgid', models.IntegerField()),
                ('hcn', models.TextField(blank=True, null=True)),
                ('startdate', models.TextField(blank=True, null=True)),
                ('enddate', models.TextField(blank=True, null=True)),
                ('venueadd', models.TextField(blank=True, null=True)),
                ('cooname', models.TextField(blank=True, null=True)),
                ('cooemail', models.EmailField(max_length=254)),
                ('coono', models.TextField(blank=True, null=True)),
                ('isactive', models.CharField(default='True', max_length=10)),
                ('eyantra_mem1', models.TextField(blank=True, null=True)),
                ('eyantra_mem2', models.TextField(blank=True, null=True)),
                ('eyantra_mem3', models.TextField(blank=True, null=True)),
                ('eyantra_mem4', models.TextField(blank=True, null=True)),
                ('eyantra_mem5', models.TextField(blank=True, null=True)),
                ('eyantra_mem6', models.TextField(blank=True, null=True)),
                ('eyantra_mem7', models.TextField(blank=True, null=True)),
                ('eyantra_mem8', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'create_workshop',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CreateTutorial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tch_id', models.IntegerField(blank=True, null=True)),
                ('clg_id', models.IntegerField(blank=True, null=True)),
                ('tut_id', models.IntegerField(blank=True, null=True)),
                ('i_agree', models.IntegerField()),
                ('start_date', models.CharField(blank=True, max_length=200, null=True)),
                ('end_date', models.CharField(blank=True, max_length=200, null=True)),
                ('video_link', models.TextField(blank=True, null=True)),
                ('rev_video_link', models.TextField(blank=True, null=True)),
                ('tut_explain', models.TextField(blank=True, null=True)),
                ('flag', models.IntegerField()),
                ('upload_date', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('difficulty', models.TextField(blank=True, null=True)),
                ('duration', models.TextField(blank=True, null=True)),
                ('presentation', models.TextField(blank=True, null=True)),
                ('lp8051', models.TextField(blank=True, null=True)),
                ('lparm', models.TextField(blank=True, null=True)),
                ('down_rev_tuto', models.IntegerField()),
                ('upload_rev_date', models.CharField(blank=True, max_length=256, null=True)),
                ('rev_upld_date', models.CharField(blank=True, max_length=200, null=True)),
                ('rev_status', models.TextField(blank=True, null=True)),
                ('rev_flag', models.IntegerField()),
                ('accept_reject', models.IntegerField()),
                ('remark', models.TextField(blank=True, null=True)),
                ('plag', models.CharField(blank=True, max_length=100, null=True)),
                ('reg_status', models.IntegerField()),
                ('agreement', models.IntegerField()),
                ('reviewer_name', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'create_tutorial',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DemoDtls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('intro_demo', models.IntegerField()),
                ('i_o_demo', models.IntegerField()),
                ('motor_demo', models.IntegerField()),
                ('pwm_demo', models.IntegerField()),
                ('lcd_demo', models.IntegerField()),
                ('adc_demo', models.IntegerField()),
                ('interrupt_demo', models.IntegerField()),
                ('total_count_demo', models.IntegerField()),
            ],
            options={
                'db_table': 'demo_dtls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Departments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('main_branch', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'db_table': 'departments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Designations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('type', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'designations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElsiClgContactDtl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clg_id', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('emailid', models.CharField(blank=True, max_length=256, null=True)),
                ('gender', models.CharField(blank=True, max_length=12, null=True)),
                ('branch', models.CharField(blank=True, max_length=128, null=True)),
                ('alt_email1', models.CharField(blank=True, max_length=256, null=True)),
                ('alt_email2', models.CharField(blank=True, max_length=256, null=True)),
                ('alt_email3', models.CharField(blank=True, max_length=256, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=50, null=True)),
                ('alt_contact1', models.CharField(blank=True, max_length=50, null=True)),
                ('alt_contact2', models.CharField(blank=True, max_length=50, null=True)),
                ('active', models.CharField(blank=True, db_column='Active', max_length=50, null=True)),
                ('designation', models.CharField(blank=True, max_length=256, null=True)),
                ('type', models.IntegerField()),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('status_cnt', models.CharField(blank=True, max_length=10, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'elsi_clg_contact_dtl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElsiCollegeDtls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clg_code', models.CharField(blank=True, max_length=512, null=True)),
                ('region_id', models.IntegerField(blank=True, null=True)),
                ('workshop_id', models.IntegerField()),
                ('college_name', models.CharField(max_length=1024)),
                ('abbreviation', models.CharField(blank=True, max_length=128, null=True)),
                ('district', models.CharField(blank=True, max_length=256, null=True)),
                ('address', models.CharField(blank=True, max_length=1024, null=True)),
                ('state', models.CharField(blank=True, max_length=512, null=True)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('college_type', models.CharField(blank=True, max_length=256, null=True)),
                ('principal_meet', models.IntegerField()),
                ('robots_given', models.IntegerField(blank=True, null=True)),
                ('eyic_allowed', models.IntegerField()),
                ('eyrtc_allowed', models.IntegerField()),
                ('tbt_allowed', models.IntegerField()),
                ('mooc_allowed', models.IntegerField(blank=True, null=True)),
                ('content_allowed', models.IntegerField()),
                ('legal_docs', models.IntegerField(blank=True, null=True)),
                ('legal_docs_remarks', models.CharField(blank=True, max_length=1024, null=True)),
                ('loi_status', models.IntegerField()),
                ('loi_format', models.IntegerField(blank=True, null=True)),
                ('loi_remarks', models.CharField(blank=True, max_length=1024, null=True)),
                ('po_status', models.IntegerField(blank=True, null=True)),
                ('po_remark', models.CharField(blank=True, max_length=1024, null=True)),
                ('wo_reg', models.IntegerField()),
                ('wo_invite', models.IntegerField()),
                ('wo_confirm', models.IntegerField()),
                ('wo_attend', models.IntegerField()),
                ('hardware_given', models.CharField(blank=True, max_length=1024, null=True)),
                ('lab_inaugurated', models.IntegerField()),
                ('phase', models.IntegerField()),
                ('eys2016_invites', models.IntegerField()),
                ('team_verify', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'elsi_college_dtls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElsiCompetitions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=12)),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('theme', models.CharField(blank=True, max_length=256, null=True)),
                ('phase', models.IntegerField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'elsi_competitions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElsiDepartments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('main_branch', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'db_table': 'elsi_departments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElsiDesignations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('type', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'elsi_designations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElsiEmails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=2054)),
                ('email_msg', models.CharField(blank=True, max_length=5200, null=True)),
                ('img', models.CharField(blank=True, max_length=1024, null=True)),
                ('pdf', models.CharField(blank=True, max_length=1024, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'elsi_emails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElsiMooc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clg_id', models.IntegerField(blank=True, null=True)),
                ('clg_code', models.CharField(blank=True, max_length=200, null=True)),
                ('college_name', models.CharField(blank=True, max_length=200, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('username', models.CharField(blank=True, max_length=200, null=True)),
                ('contact', models.CharField(blank=True, max_length=100, null=True)),
                ('slot', models.CharField(blank=True, max_length=200, null=True)),
                ('email_flag', models.IntegerField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'elsi_mooc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElsiRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_name', models.CharField(max_length=512)),
                ('type', models.IntegerField()),
                ('active', models.IntegerField()),
                ('clg_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'elsi_region',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElsiState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=6, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'elsi_state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElsiStudentsMooc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('emailid', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=12, null=True)),
                ('alt_contact1', models.CharField(blank=True, max_length=12, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('current_year', models.CharField(blank=True, max_length=5, null=True)),
                ('mooc_allowed', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'elsi_students_mooc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElsiTeacherDtls',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('clg_id', models.IntegerField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('emailid', models.TextField(blank=True, null=True)),
                ('alt_email1', models.TextField(blank=True, null=True)),
                ('alt_email2', models.TextField(blank=True, null=True)),
                ('contact_num', models.TextField(blank=True, null=True)),
                ('alt_contact1', models.TextField(blank=True, null=True)),
                ('department', models.TextField(blank=True, null=True)),
                ('designation', models.TextField(blank=True, null=True)),
                ('gender', models.TextField(blank=True, null=True)),
                ('coor_flag', models.IntegerField(blank=True, null=True)),
                ('wo_flag', models.IntegerField(blank=True, null=True)),
                ('workshop_id', models.IntegerField(blank=True, null=True)),
                ('wo_attendee', models.IntegerField(blank=True, null=True)),
                ('wo_count', models.IntegerField(blank=True, null=True)),
                ('eyrtc_flag', models.IntegerField(blank=True, null=True)),
                ('tbt_flag', models.IntegerField(blank=True, null=True)),
                ('eyic_flag', models.TextField(blank=True, null=True)),
                ('content_flag', models.TextField(blank=True, null=True)),
                ('status', models.TextField(blank=True, db_column='Status', null=True)),
                ('status_flag', models.TextField(blank=True, null=True)),
                ('modified_by', models.TextField(blank=True, null=True)),
                ('elsi_flag', models.TextField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('login_created', models.TextField(blank=True, null=True)),
                ('created_at', models.TextField(blank=True, null=True)),
                ('updated_at', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'elsi_teacher_dtls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElsiTeachersDtls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('clg_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('emailid', models.CharField(blank=True, max_length=256, null=True)),
                ('alt_email1', models.CharField(blank=True, max_length=256, null=True)),
                ('alt_email2', models.CharField(blank=True, max_length=256, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=25, null=True)),
                ('alt_contact1', models.CharField(blank=True, max_length=50, null=True)),
                ('department', models.CharField(blank=True, max_length=128, null=True)),
                ('designation', models.CharField(blank=True, max_length=30, null=True)),
                ('gender', models.CharField(blank=True, max_length=15, null=True)),
                ('coor_flag', models.IntegerField()),
                ('wo_flag', models.IntegerField()),
                ('mooc_allowed', models.IntegerField(blank=True, null=True)),
                ('workshop_id', models.IntegerField()),
                ('wo_attendee', models.IntegerField()),
                ('wo_count', models.IntegerField()),
                ('eyrtc_flag', models.IntegerField()),
                ('tbt_flag', models.IntegerField()),
                ('eyic_flag', models.IntegerField()),
                ('content_flag', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=150, null=True)),
                ('status_flag', models.IntegerField(blank=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('elsi_flag', models.IntegerField(blank=True, null=True)),
                ('remarks', models.CharField(blank=True, max_length=150, null=True)),
                ('login_created', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'elsi_teachers_dtls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EyantraCertDtls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workshop_id', models.IntegerField(blank=True, null=True)),
                ('tch_id', models.IntegerField(blank=True, null=True)),
                ('cert_num', models.CharField(blank=True, max_length=200, null=True)),
                ('cert_date', models.CharField(blank=True, max_length=25, null=True)),
                ('generated_at', models.CharField(blank=True, max_length=100, null=True)),
                ('remarks', models.CharField(blank=True, max_length=10, null=True)),
                ('type', models.CharField(blank=True, max_length=10, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('eyrtc_id', models.IntegerField(blank=True, null=True)),
                ('eyic_id', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'eyantra_cert_dtls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EyrtcParticipation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clg_id', models.IntegerField()),
                ('comp_id', models.IntegerField()),
                ('tl_id', models.IntegerField()),
                ('tm1_id', models.IntegerField(blank=True, null=True)),
                ('tm2_id', models.IntegerField(blank=True, null=True)),
                ('tm3_id', models.IntegerField(blank=True, null=True)),
                ('year', models.CharField(max_length=4)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'eyrtc_participation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EyrtcStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_id', models.IntegerField()),
                ('task0_uploaded', models.IntegerField()),
                ('task0_date', models.DateTimeField(blank=True, null=True)),
                ('task0_file_name', models.CharField(blank=True, max_length=200, null=True)),
                ('task0_marks', models.FloatField(blank=True, null=True)),
                ('task0_remark', models.CharField(blank=True, max_length=1024, null=True)),
                ('task1_uploaded', models.IntegerField()),
                ('task1_date', models.DateTimeField(blank=True, null=True)),
                ('task1_link', models.CharField(blank=True, max_length=1024, null=True)),
                ('task1_marks', models.FloatField(blank=True, null=True)),
                ('task1_remark', models.CharField(blank=True, max_length=1024, null=True)),
                ('task2_uploaded', models.IntegerField()),
                ('task2_date', models.DateTimeField(blank=True, null=True)),
                ('task2_link1', models.CharField(blank=True, max_length=2048, null=True)),
                ('task2_link2', models.CharField(blank=True, max_length=2048, null=True)),
                ('task2_marks', models.FloatField(blank=True, null=True)),
                ('task2_remark', models.CharField(blank=True, max_length=1024, null=True)),
                ('taskvideo_uploaded', models.IntegerField()),
                ('taskvideo_date', models.DateTimeField(blank=True, null=True)),
                ('taskvideo_link', models.CharField(blank=True, max_length=2048, null=True)),
                ('taskvideo_marks', models.FloatField(blank=True, null=True)),
                ('taskvideo_remark', models.CharField(blank=True, max_length=1024, null=True)),
                ('taskcode_uploaded', models.IntegerField()),
                ('taskcode_date', models.DateTimeField(blank=True, null=True)),
                ('taskcode_marks', models.FloatField(blank=True, null=True)),
                ('taskcode_remark', models.CharField(blank=True, max_length=1024, null=True)),
                ('final_validatory_marks', models.IntegerField(blank=True, null=True)),
                ('final_validatory_remarks', models.CharField(blank=True, max_length=1024, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'eyrtc_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EysipConduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stud_name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('photograph', models.CharField(blank=True, max_length=100, null=True)),
                ('pancard', models.CharField(blank=True, max_length=100, null=True)),
                ('signature', models.CharField(blank=True, max_length=100, null=True)),
                ('conduct', models.IntegerField(blank=True, null=True)),
                ('proj_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'eysip_conduct',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EysRegistration2016',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_id', models.IntegerField()),
                ('clg_id', models.IntegerField()),
                ('team_id', models.CharField(blank=True, max_length=2056, null=True)),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('emailid', models.CharField(blank=True, max_length=256, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=25, null=True)),
                ('role', models.CharField(blank=True, max_length=30, null=True)),
                ('gender', models.CharField(blank=True, max_length=15, null=True)),
                ('arrival_date', models.CharField(blank=True, max_length=256, null=True)),
                ('departure_date', models.CharField(blank=True, max_length=256, null=True)),
                ('elsi_coor', models.IntegerField()),
                ('elsi_competition', models.IntegerField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=512, null=True)),
                ('accommodation', models.CharField(blank=True, max_length=512, null=True)),
                ('attendence', models.CharField(blank=True, max_length=512, null=True)),
                ('reached_venue', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'eys_registration_2016',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EysRegistration2017',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_id', models.IntegerField()),
                ('clg_id', models.IntegerField()),
                ('team_id', models.CharField(blank=True, max_length=2056, null=True)),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('emailid', models.CharField(blank=True, max_length=256, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=25, null=True)),
                ('role', models.CharField(blank=True, max_length=30, null=True)),
                ('gender', models.CharField(blank=True, max_length=15, null=True)),
                ('arrival_date', models.CharField(blank=True, max_length=256, null=True)),
                ('arrival_time', models.CharField(blank=True, max_length=250, null=True)),
                ('departure_date', models.CharField(blank=True, max_length=256, null=True)),
                ('elsi_coor', models.IntegerField()),
                ('elsi_competition', models.IntegerField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=512, null=True)),
                ('accommodation', models.CharField(blank=True, max_length=512, null=True)),
                ('attendence', models.CharField(blank=True, max_length=512, null=True)),
                ('account_number', models.CharField(blank=True, max_length=512, null=True)),
                ('account_holder_name', models.CharField(blank=True, max_length=512, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=512, null=True)),
                ('bank_address', models.CharField(blank=True, max_length=512, null=True)),
                ('account_type', models.CharField(blank=True, max_length=512, null=True)),
                ('ifsc_code', models.CharField(blank=True, db_column='IFSC_code', max_length=512, null=True)),
                ('reached_venue', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'eys_registration_2017',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EysRegistration2018',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_id', models.IntegerField()),
                ('clg_id', models.IntegerField()),
                ('team_id', models.CharField(blank=True, max_length=2056, null=True)),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('emailid', models.CharField(blank=True, max_length=256, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=25, null=True)),
                ('role', models.CharField(blank=True, max_length=30, null=True)),
                ('gender', models.CharField(blank=True, max_length=15, null=True)),
                ('arrival_date', models.CharField(blank=True, max_length=256, null=True)),
                ('arrival_time', models.CharField(blank=True, max_length=250, null=True)),
                ('departure_date', models.CharField(blank=True, max_length=256, null=True)),
                ('elsi_coor', models.IntegerField()),
                ('elsi_competition', models.IntegerField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=512, null=True)),
                ('accommodation', models.CharField(blank=True, max_length=512, null=True)),
                ('attendence', models.CharField(blank=True, max_length=512, null=True)),
                ('account_number', models.CharField(blank=True, max_length=512, null=True)),
                ('account_holder_name', models.CharField(blank=True, max_length=512, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=512, null=True)),
                ('bank_address', models.CharField(blank=True, max_length=512, null=True)),
                ('account_type', models.CharField(blank=True, max_length=512, null=True)),
                ('ifsc_code', models.CharField(blank=True, db_column='IFSC_code', max_length=512, null=True)),
                ('reached_venue', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'eys_registration_2018',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EysRegistration2019',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_id', models.IntegerField()),
                ('clg_id', models.IntegerField(blank=True, null=True)),
                ('team_id', models.CharField(blank=True, max_length=2056, null=True)),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('emailid', models.CharField(blank=True, max_length=256, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=25, null=True)),
                ('role', models.CharField(blank=True, max_length=30, null=True)),
                ('gender', models.CharField(blank=True, max_length=15, null=True)),
                ('arrival_date', models.CharField(blank=True, max_length=256, null=True)),
                ('arrival_time', models.CharField(blank=True, max_length=250, null=True)),
                ('departure_date', models.CharField(blank=True, max_length=256, null=True)),
                ('elsi_coor', models.IntegerField()),
                ('elsi_competition', models.IntegerField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=512, null=True)),
                ('accommodation', models.CharField(blank=True, max_length=512, null=True)),
                ('attendence', models.CharField(blank=True, max_length=512, null=True)),
                ('account_number', models.CharField(blank=True, max_length=512, null=True)),
                ('account_holder_name', models.CharField(blank=True, max_length=512, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=512, null=True)),
                ('bank_address', models.CharField(blank=True, max_length=512, null=True)),
                ('account_type', models.CharField(blank=True, max_length=512, null=True)),
                ('ifsc_code', models.CharField(blank=True, db_column='IFSC_code', max_length=512, null=True)),
                ('reached_venue', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'eys_registration_2019',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EysRegistration2020',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_id', models.IntegerField()),
                ('clg_id', models.IntegerField(blank=True, null=True)),
                ('team_id', models.CharField(blank=True, max_length=2056, null=True)),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('emailid', models.CharField(blank=True, max_length=256, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=25, null=True)),
                ('role', models.CharField(blank=True, max_length=30, null=True)),
                ('gender', models.CharField(blank=True, max_length=15, null=True)),
                ('arrival_date', models.CharField(blank=True, max_length=256, null=True)),
                ('arrival_time', models.CharField(blank=True, max_length=250, null=True)),
                ('departure_date', models.CharField(blank=True, max_length=256, null=True)),
                ('elsi_coor', models.IntegerField()),
                ('elsi_competition', models.IntegerField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=512, null=True)),
                ('accommodation', models.CharField(blank=True, max_length=512, null=True)),
                ('attendence', models.CharField(blank=True, max_length=512, null=True)),
                ('account_number', models.CharField(blank=True, max_length=512, null=True)),
                ('account_holder_name', models.CharField(blank=True, max_length=512, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=512, null=True)),
                ('bank_address', models.CharField(blank=True, max_length=512, null=True)),
                ('account_type', models.CharField(blank=True, max_length=512, null=True)),
                ('ifsc_code', models.CharField(blank=True, db_column='IFSC_code', max_length=512, null=True)),
                ('reached_venue', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'eys_registration_2020',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IeModules',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024)),
                ('image_name', models.CharField(blank=True, max_length=1024, null=True)),
                ('short_intro', models.CharField(blank=True, max_length=2048, null=True)),
                ('video_code', models.CharField(blank=True, max_length=512, null=True)),
                ('down_pdf', models.CharField(blank=True, max_length=1024, null=True)),
                ('available', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ie_modules',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Login',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('team_id', models.IntegerField()),
                ('team_member_id', models.IntegerField()),
                ('username', models.CharField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=1024)),
                ('role', models.IntegerField()),
                ('active', models.IntegerField()),
                ('theme', models.CharField(blank=True, max_length=20, null=True)),
                ('email_flag', models.IntegerField(blank=True, null=True)),
                ('last_login', models.DateTimeField()),
                ('login_count', models.IntegerField()),
                ('change_count', models.IntegerField()),
                ('forgot_count', models.IntegerField()),
                ('remember_token', models.CharField(blank=True, max_length=1024, null=True)),
                ('verify_token', models.CharField(blank=True, max_length=100, null=True)),
                ('token', models.CharField(blank=True, max_length=1024, null=True)),
                ('email_verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'login',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LoginEmails',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('team_id', models.IntegerField(blank=True, null=True)),
                ('team_member_id', models.IntegerField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('password', models.CharField(blank=True, max_length=1024, null=True)),
                ('role', models.IntegerField()),
                ('active', models.IntegerField()),
                ('theme', models.CharField(blank=True, max_length=20, null=True)),
                ('email_flag', models.IntegerField(blank=True, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('login_count', models.IntegerField()),
                ('change_count', models.IntegerField()),
                ('forgot_count', models.IntegerField()),
                ('remember_token', models.CharField(blank=True, max_length=1024, null=True)),
                ('verify_token', models.CharField(blank=True, max_length=100, null=True)),
                ('token', models.CharField(blank=True, max_length=1024, null=True)),
                ('email_verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'login_emails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='memberdetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('emailid', models.EmailField(max_length=254)),
                ('name', models.CharField(max_length=50, null=True)),
                ('language', models.TextField(blank=True, null=True)),
                ('team', models.CharField(max_length=10, null=True)),
                ('head', models.CharField(max_length=30, null=True)),
                ('cohead', models.CharField(max_length=30, null=True)),
                ('ishead', models.CharField(max_length=10, null=True)),
                ('iscohead', models.CharField(max_length=10, null=True)),
            ],
            options={
                'db_table': 'member_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoocColleges',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clg_id', models.IntegerField(blank=True, null=True)),
                ('tch_email', models.CharField(blank=True, max_length=200, null=True)),
                ('students', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mooc_colleges',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OnlineLabInauguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clg_id', models.IntegerField()),
                ('labinaug_date', models.CharField(blank=True, max_length=25, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'online_lab_inauguration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PrincipalMeetAttendee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('principal_meet_id', models.IntegerField(blank=True, null=True)),
                ('clg_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('emailid', models.CharField(blank=True, max_length=250, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=100, null=True)),
                ('alt_contact1', models.IntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=16, null=True)),
                ('designation', models.CharField(blank=True, max_length=512, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'principal_meet_attendee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PrincipalMeetDtls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_id', models.IntegerField(blank=True, null=True)),
                ('clg_id', models.IntegerField(blank=True, null=True)),
                ('active', models.IntegerField()),
                ('start_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'principal_meet_dtls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PrincipalMeetParticipants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('principal_meet_id', models.IntegerField(blank=True, null=True)),
                ('data_table_id', models.IntegerField(blank=True, null=True)),
                ('clg_id', models.IntegerField(blank=True, null=True)),
                ('clg_contact_id', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'principal_meet_participants',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_name', models.CharField(max_length=512)),
                ('type', models.IntegerField()),
                ('active', models.IntegerField()),
                ('clg_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'region',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ssn_detail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ssn_id', models.CharField(max_length=50)),
                ('user', models.CharField(max_length=50)),
                ('timestamp', models.DateTimeField()),
                ('mail_label', models.CharField(max_length=50)),
                ('rcptmailid', models.CharField(max_length=50)),
                ('delegated_access', models.CharField(max_length=10)),
                ('dcprovider', models.CharField(max_length=50)),
                ('messageid', models.TextField()),
            ],
            options={
                'db_table': 'ssn_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Talks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1024, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('image', models.CharField(blank=True, max_length=1024, null=True)),
                ('image_alt', models.CharField(blank=True, max_length=128, null=True)),
                ('short_intro', models.TextField(blank=True, null=True)),
                ('visited_lecture', models.IntegerField()),
                ('available', models.SmallIntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'talks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TalksSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display', models.IntegerField(blank=True, null=True)),
                ('image', models.CharField(blank=True, max_length=512, null=True)),
                ('img_url', models.CharField(blank=True, max_length=512, null=True)),
                ('available', models.SmallIntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'talks_series',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtChallengeMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=1020, null=True)),
                ('create_at', models.DateTimeField()),
                ('update_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tbt_challenge_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtChallengeStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_id', models.IntegerField()),
                ('i_agree_challenge', models.IntegerField()),
                ('task1_uploaded', models.IntegerField()),
                ('task1_upload_time', models.DateTimeField()),
                ('task1_file_name', models.CharField(blank=True, max_length=64, null=True)),
                ('task1_marks', models.FloatField(blank=True, null=True)),
                ('task1_remark', models.CharField(blank=True, max_length=1024, null=True)),
                ('task2_uploaded', models.IntegerField()),
                ('task2_video_link', models.CharField(blank=True, max_length=256, null=True)),
                ('task2_upload_time', models.DateTimeField(blank=True, null=True)),
                ('task2_code_uploaded', models.IntegerField()),
                ('task2_code_upload_time', models.DateTimeField(blank=True, null=True)),
                ('task2_marks', models.FloatField(blank=True, null=True)),
                ('task2_remark', models.CharField(blank=True, max_length=1024, null=True)),
                ('challenge_result', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbt_challenge_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtChallengeTeamSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_id', models.IntegerField()),
                ('theme_id', models.IntegerField()),
                ('launch_date', models.DateTimeField()),
                ('task1_deadline', models.DateTimeField()),
                ('task2_deadline', models.DateTimeField()),
                ('tbt_phase', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tbt_challenge_team_schedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtClgContactDtls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tbt_clg_id', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('emailid', models.CharField(blank=True, max_length=256, null=True)),
                ('gender', models.CharField(blank=True, max_length=12, null=True)),
                ('branch', models.CharField(blank=True, max_length=128, null=True)),
                ('alt_email1', models.CharField(blank=True, max_length=256, null=True)),
                ('alt_email2', models.CharField(blank=True, max_length=256, null=True)),
                ('alt_email3', models.CharField(blank=True, max_length=256, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=50, null=True)),
                ('alt_contact1', models.CharField(blank=True, max_length=50, null=True)),
                ('alt_contact2', models.CharField(blank=True, max_length=50, null=True)),
                ('alt_contact3', models.CharField(blank=True, max_length=50, null=True)),
                ('designation', models.CharField(blank=True, max_length=256, null=True)),
                ('type', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbt_clg_contact_dtls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtCollegeDtls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('elsi_clg_id', models.IntegerField(blank=True, null=True)),
                ('region_id', models.IntegerField(blank=True, null=True)),
                ('college_name', models.CharField(max_length=1024)),
                ('abbreviation', models.CharField(blank=True, max_length=128, null=True)),
                ('district', models.CharField(blank=True, max_length=256, null=True)),
                ('address', models.CharField(blank=True, max_length=1024, null=True)),
                ('state', models.CharField(blank=True, max_length=512, null=True)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('college_type', models.CharField(blank=True, max_length=256, null=True)),
                ('principal_meet', models.IntegerField()),
                ('robots_given', models.IntegerField(blank=True, null=True)),
                ('tbt_allowed', models.IntegerField()),
                ('tbt_count', models.IntegerField(blank=True, null=True)),
                ('completed', models.IntegerField(blank=True, null=True)),
                ('legal_docs', models.IntegerField(blank=True, null=True)),
                ('legal_docs_remarks', models.CharField(blank=True, max_length=1024, null=True)),
                ('loi_status', models.IntegerField(blank=True, null=True)),
                ('po_status', models.IntegerField(blank=True, null=True)),
                ('po_remark', models.CharField(blank=True, max_length=1024, null=True)),
                ('wo_reg', models.IntegerField()),
                ('wo_invite', models.IntegerField()),
                ('wo_confirm', models.IntegerField()),
                ('wo_attend', models.IntegerField()),
                ('phase', models.IntegerField()),
                ('lab_inaugrated', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbt_college_dtls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtCompetition',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('year', models.CharField(max_length=16)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbt_competition',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtExperimentMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.IntegerField()),
                ('ex_version_id', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbt_experiment_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_id', models.IntegerField()),
                ('usr_id', models.IntegerField()),
                ('teacher_name', models.CharField(max_length=1024)),
                ('email_id', models.CharField(blank=True, max_length=1024, null=True)),
                ('question1', models.TextField(blank=True, null=True)),
                ('question2', models.TextField(blank=True, null=True)),
                ('question3', models.TextField(blank=True, null=True)),
                ('question4', models.TextField(blank=True, null=True)),
                ('question5', models.TextField(blank=True, null=True)),
                ('question6', models.TextField(blank=True, null=True)),
                ('question7', models.CharField(blank=True, max_length=8192, null=True)),
                ('question8', models.CharField(blank=True, max_length=8192, null=True)),
                ('question9', models.CharField(blank=True, max_length=8192, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tbt_feedback',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtMcqMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_id', models.IntegerField(blank=True, null=True)),
                ('mcq_version_id', models.IntegerField(blank=True, null=True)),
                ('question_text', models.TextField(blank=True, null=True)),
                ('option_1', models.CharField(blank=True, max_length=2048, null=True)),
                ('option_2', models.CharField(blank=True, max_length=2048, null=True)),
                ('option_3', models.CharField(blank=True, max_length=2048, null=True)),
                ('option_4', models.CharField(blank=True, max_length=2048, null=True)),
                ('option_5', models.CharField(blank=True, max_length=2048, null=True)),
                ('correct_option', models.IntegerField(blank=True, null=True)),
                ('answer_explanation', models.CharField(blank=True, max_length=8192, null=True)),
                ('task', models.IntegerField(blank=True, null=True)),
                ('tbt_phase', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tbt_mcq_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtMcqTask1Dtls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_id', models.IntegerField(blank=True, null=True)),
                ('question_id', models.IntegerField(blank=True, null=True)),
                ('choosen_option', models.IntegerField(blank=True, null=True)),
                ('save_count', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tbt_mcq_task1_dtls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtMcqTask2Dtls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_id', models.IntegerField(blank=True, null=True)),
                ('question_id', models.IntegerField(blank=True, null=True)),
                ('choosen_option', models.IntegerField(blank=True, null=True)),
                ('save_count', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tbt_mcq_task2_dtls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtMcqTask3Dtls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_id', models.IntegerField(blank=True, null=True)),
                ('question_id', models.IntegerField(blank=True, null=True)),
                ('choosen_option', models.IntegerField(blank=True, null=True)),
                ('save_count', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tbt_mcq_task3_dtls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtMcqTask4Dtls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_id', models.IntegerField(blank=True, null=True)),
                ('question_id', models.IntegerField(blank=True, null=True)),
                ('choosen_option', models.IntegerField(blank=True, null=True)),
                ('save_count', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tbt_mcq_task4_dtls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtMcqTask5Dtls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_id', models.IntegerField(blank=True, null=True)),
                ('question_id', models.IntegerField(blank=True, null=True)),
                ('choosen_option', models.IntegerField(blank=True, null=True)),
                ('save_count', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tbt_mcq_task5_dtls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtMcqTask6Dtls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_id', models.IntegerField(blank=True, null=True)),
                ('question_id', models.IntegerField(blank=True, null=True)),
                ('choosen_option', models.CharField(blank=True, max_length=1024, null=True)),
                ('save_count', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tbt_mcq_task6_dtls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtMcqTaskDtls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task', models.IntegerField()),
                ('team_id', models.IntegerField(blank=True, null=True)),
                ('question_id', models.IntegerField(blank=True, null=True)),
                ('chosen_option', models.IntegerField(blank=True, null=True)),
                ('save_count', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tbt_mcq_task_dtls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtParticipation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clg_id', models.IntegerField()),
                ('tbt_phase', models.IntegerField()),
                ('tl_id', models.IntegerField()),
                ('tm1_id', models.IntegerField(blank=True, null=True)),
                ('tm2_id', models.IntegerField(blank=True, null=True)),
                ('tm3_id', models.IntegerField(blank=True, null=True)),
                ('year', models.CharField(max_length=4)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbt_participation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtQuesAnsDtls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clg_id', models.IntegerField(blank=True, null=True)),
                ('part_id', models.IntegerField(blank=True, null=True)),
                ('ques_1', models.IntegerField(blank=True, null=True)),
                ('ques_2', models.IntegerField(blank=True, null=True)),
                ('ques_3', models.IntegerField(blank=True, null=True)),
                ('ques_4', models.IntegerField(blank=True, null=True)),
                ('ques_5', models.CharField(blank=True, max_length=1024, null=True)),
                ('task', models.IntegerField(blank=True, null=True)),
                ('marks', models.FloatField(blank=True, null=True)),
                ('bonus', models.IntegerField(blank=True, null=True)),
                ('total_marks', models.FloatField(blank=True, null=True)),
                ('save_count', models.IntegerField(blank=True, null=True)),
                ('submit', models.IntegerField(blank=True, null=True)),
                ('submit_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tbt_ques_ans_dtls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtQuestionMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.IntegerField(blank=True, null=True)),
                ('option_1', models.IntegerField(blank=True, null=True)),
                ('option_2', models.IntegerField(blank=True, null=True)),
                ('option_3', models.IntegerField(blank=True, null=True)),
                ('option_4', models.IntegerField(blank=True, null=True)),
                ('option_5', models.IntegerField(blank=True, null=True)),
                ('correct_option', models.IntegerField(blank=True, null=True)),
                ('task', models.IntegerField(blank=True, null=True)),
                ('type', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tbt_question_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_number', models.IntegerField()),
                ('tasks', models.CharField(blank=True, max_length=2048, null=True)),
                ('launch_date', models.DateTimeField(blank=True, null=True)),
                ('task_deadline', models.DateTimeField(blank=True, null=True)),
                ('absolute_deadline', models.DateTimeField(blank=True, null=True)),
                ('tbt_phase', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbt_schedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtScheduleChallenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_number', models.IntegerField()),
                ('tasks', models.CharField(blank=True, max_length=2048, null=True)),
                ('launch_date', models.DateTimeField(blank=True, null=True)),
                ('task_deadline', models.DateTimeField(blank=True, null=True)),
                ('tbt_phase', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbt_schedule_challenge',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_id', models.IntegerField()),
                ('task1_uploaded', models.IntegerField()),
                ('task1_upload_time', models.DateTimeField()),
                ('task1_marks', models.FloatField(blank=True, null=True)),
                ('task1_remark', models.CharField(blank=True, max_length=1024, null=True)),
                ('task2_uploaded', models.IntegerField()),
                ('task2_upload_time', models.DateTimeField(blank=True, null=True)),
                ('task2_marks', models.FloatField(blank=True, null=True)),
                ('task2_remark', models.CharField(blank=True, max_length=1024, null=True)),
                ('task3_uploaded', models.IntegerField()),
                ('task3_upload_time', models.DateTimeField()),
                ('task3_marks', models.FloatField(blank=True, null=True)),
                ('task3_remark', models.CharField(blank=True, max_length=1024, null=True)),
                ('task4_uploaded', models.IntegerField()),
                ('task4_upload_time', models.DateTimeField()),
                ('task4_marks', models.FloatField(blank=True, null=True)),
                ('task4_remark', models.CharField(blank=True, max_length=1024, null=True)),
                ('task5_uploaded', models.IntegerField()),
                ('task5_upload_time', models.DateTimeField()),
                ('task5_marks', models.FloatField(blank=True, null=True)),
                ('task5_remark', models.CharField(blank=True, max_length=1024, null=True)),
                ('task6_uploaded', models.IntegerField()),
                ('task6_upload_time', models.DateTimeField()),
                ('task6_marks', models.FloatField(blank=True, null=True)),
                ('task6_remark', models.CharField(blank=True, max_length=1024, null=True)),
                ('award_grade', models.CharField(blank=True, max_length=64, null=True)),
                ('names_ok', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbt_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtStatusChallenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_id', models.IntegerField()),
                ('i_agree_challenge', models.IntegerField()),
                ('task1_arena_uploaded', models.IntegerField()),
                ('task1_arena_upload_time', models.DateTimeField(blank=True, null=True)),
                ('task1_file_name', models.CharField(blank=True, max_length=64, null=True)),
                ('task1_arena_marks', models.FloatField(blank=True, null=True)),
                ('task1_arena_remark', models.CharField(blank=True, max_length=1024, null=True)),
                ('task2_video_uploaded', models.IntegerField()),
                ('task2_video_link', models.CharField(blank=True, max_length=256, null=True)),
                ('task2_video_upload_time', models.DateTimeField(blank=True, null=True)),
                ('task2_code_uploaded', models.IntegerField()),
                ('task2_code_upload_time', models.DateTimeField(blank=True, null=True)),
                ('challenge_task2_total_marks', models.FloatField(blank=True, null=True)),
                ('task2_total_remark', models.CharField(blank=True, max_length=1024, null=True)),
                ('challenge_result', models.CharField(blank=True, max_length=256, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbt_status_challenge',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtStatusComplete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_id', models.IntegerField()),
                ('task0_noc', models.IntegerField()),
                ('task1_status', models.IntegerField()),
                ('task1_bonus_marks', models.IntegerField(blank=True, null=True)),
                ('task1_total_marks', models.FloatField(blank=True, null=True)),
                ('task1_graded', models.IntegerField()),
                ('task2_status', models.IntegerField()),
                ('task2_bonus_marks', models.IntegerField(blank=True, null=True)),
                ('task2_total_marks', models.FloatField(blank=True, null=True)),
                ('task2_graded', models.IntegerField()),
                ('task3_status', models.IntegerField()),
                ('task3_bonus_marks', models.IntegerField(blank=True, null=True)),
                ('task3_total_marks', models.FloatField(blank=True, null=True)),
                ('task3_graded', models.IntegerField()),
                ('task4_status', models.IntegerField()),
                ('task4_bonus_marks', models.IntegerField(blank=True, null=True)),
                ('task4_total_marks', models.FloatField(blank=True, null=True)),
                ('task4_graded', models.IntegerField()),
                ('task5_status', models.IntegerField()),
                ('task5_bonus_marks', models.IntegerField(blank=True, null=True)),
                ('task5_total_marks', models.FloatField(blank=True, null=True)),
                ('task5_graded', models.IntegerField()),
                ('task6_status', models.IntegerField()),
                ('task6_bonus_marks', models.IntegerField(blank=True, null=True)),
                ('task6_total_marks', models.FloatField(blank=True, null=True)),
                ('task6_graded', models.IntegerField()),
                ('tbt_completed', models.IntegerField()),
                ('award_grade', models.CharField(blank=True, max_length=64, null=True)),
                ('names_ok', models.IntegerField()),
                ('bonus_task_downloaded', models.IntegerField(blank=True, null=True)),
                ('profile_photo_request', models.IntegerField()),
                ('completed_in_days', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbt_status_complete',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtStatusExperiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_id', models.IntegerField()),
                ('task1_version', models.IntegerField()),
                ('task2_version', models.IntegerField()),
                ('task3_version', models.IntegerField()),
                ('task4_version', models.IntegerField()),
                ('task5_version', models.IntegerField()),
                ('task6_version', models.IntegerField()),
                ('task1_uploaded', models.IntegerField()),
                ('task1_upload_time', models.DateTimeField(blank=True, null=True)),
                ('task1_marks', models.FloatField(blank=True, null=True)),
                ('task1_remark', models.CharField(blank=True, max_length=1024, null=True)),
                ('task2_uploaded', models.IntegerField()),
                ('task2_upload_time', models.DateTimeField(blank=True, null=True)),
                ('task2_marks', models.FloatField(blank=True, null=True)),
                ('task2_remark', models.CharField(blank=True, max_length=1024, null=True)),
                ('task3_uploaded', models.IntegerField()),
                ('task3_upload_time', models.DateTimeField(blank=True, null=True)),
                ('task3_marks', models.FloatField(blank=True, null=True)),
                ('task3_remark', models.CharField(blank=True, max_length=1024, null=True)),
                ('task4_uploaded', models.IntegerField()),
                ('task4_upload_time', models.DateTimeField(blank=True, null=True)),
                ('task4_marks', models.FloatField(blank=True, null=True)),
                ('task4_remark', models.CharField(blank=True, max_length=1024, null=True)),
                ('task5_uploaded', models.IntegerField()),
                ('task5_upload_time', models.DateTimeField(blank=True, null=True)),
                ('task5_marks', models.FloatField(blank=True, null=True)),
                ('task5_remark', models.CharField(blank=True, max_length=1024, null=True)),
                ('task6_uploaded', models.IntegerField()),
                ('task6_upload_time', models.DateTimeField(blank=True, null=True)),
                ('task6_marks', models.FloatField(blank=True, null=True)),
                ('task6_remark', models.CharField(blank=True, max_length=1024, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbt_status_experiment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtStatusMcq',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_id', models.IntegerField()),
                ('task1_mcq_status', models.IntegerField()),
                ('task1_mcq_time', models.DateTimeField(blank=True, null=True)),
                ('task1_mcq_version', models.IntegerField()),
                ('task1_mcq_marks', models.FloatField(blank=True, null=True)),
                ('task2_mcq_status', models.IntegerField()),
                ('task2_mcq_time', models.DateTimeField(blank=True, null=True)),
                ('task2_mcq_version', models.IntegerField()),
                ('task2_mcq_marks', models.FloatField(blank=True, null=True)),
                ('task3_mcq_status', models.IntegerField()),
                ('task3_mcq_time', models.DateTimeField(blank=True, null=True)),
                ('task3_mcq_version', models.IntegerField()),
                ('task3_mcq_marks', models.FloatField(blank=True, null=True)),
                ('task4_mcq_status', models.IntegerField()),
                ('task4_mcq_time', models.DateTimeField(blank=True, null=True)),
                ('task4_mcq_version', models.IntegerField()),
                ('task4_mcq_marks', models.FloatField(blank=True, null=True)),
                ('task5_mcq_status', models.IntegerField()),
                ('task5_mcq_time', models.DateTimeField(blank=True, null=True)),
                ('task5_mcq_version', models.IntegerField()),
                ('task5_mcq_marks', models.FloatField(blank=True, null=True)),
                ('task6_mcq_status', models.IntegerField()),
                ('task6_mcq_time', models.DateTimeField(blank=True, null=True)),
                ('task6_mcq_version', models.IntegerField()),
                ('task6_mcq_marks', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbt_status_mcq',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtTeachersDtls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('tbt_clg_id', models.IntegerField()),
                ('team_id', models.IntegerField()),
                ('elsi_tch_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('name_on_cheque', models.CharField(blank=True, max_length=1024, null=True)),
                ('cheque_issued', models.CharField(blank=True, max_length=255, null=True)),
                ('account_number', models.CharField(blank=True, max_length=512, null=True)),
                ('account_holders_name', models.CharField(blank=True, max_length=512, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=512, null=True)),
                ('bank_address', models.CharField(blank=True, max_length=512, null=True)),
                ('account_type', models.CharField(blank=True, max_length=512, null=True)),
                ('ifsc_code', models.CharField(blank=True, db_column='IFSC_code', max_length=512, null=True)),
                ('bankdtl_added_date', models.DateTimeField(blank=True, null=True)),
                ('emailid', models.CharField(blank=True, max_length=256, null=True)),
                ('alt_email1', models.CharField(blank=True, max_length=256, null=True)),
                ('alt_email2', models.CharField(blank=True, max_length=256, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=25, null=True)),
                ('alt_contact1', models.CharField(blank=True, max_length=50, null=True)),
                ('alt_contact2', models.CharField(blank=True, max_length=50, null=True)),
                ('department', models.CharField(blank=True, max_length=128, null=True)),
                ('designation', models.CharField(blank=True, max_length=30, null=True)),
                ('gender', models.CharField(blank=True, max_length=15, null=True)),
                ('coor_flag', models.IntegerField()),
                ('tbt_flag', models.IntegerField()),
                ('submitted_to_office', models.IntegerField(blank=True, null=True)),
                ('submitted_to_cert_team', models.IntegerField(blank=True, null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=516, null=True)),
                ('login_created', models.IntegerField()),
                ('profile_photo', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbt_teachers_dtls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtTeams',
            fields=[
                ('team_id', models.AutoField(primary_key=True, serialize=False)),
                ('tbt_clg_id', models.IntegerField()),
                ('tbt_phase', models.IntegerField()),
                ('tl_id', models.IntegerField()),
                ('tm1_id', models.IntegerField(blank=True, null=True)),
                ('tm2_id', models.IntegerField(blank=True, null=True)),
                ('tm3_id', models.IntegerField(blank=True, null=True)),
                ('year', models.CharField(blank=True, max_length=16, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbt_teams',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtTeamsSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_id', models.IntegerField(blank=True, null=True)),
                ('launch_date', models.DateTimeField()),
                ('task0_deadline', models.DateTimeField(blank=True, null=True)),
                ('task1_deadline', models.DateTimeField(blank=True, null=True)),
                ('task2_deadline', models.DateTimeField()),
                ('task3_deadline', models.DateTimeField()),
                ('task4_deadline', models.DateTimeField()),
                ('task5_deadline', models.DateTimeField()),
                ('task6_deadline', models.DateTimeField()),
                ('absolute_deadline', models.DateTimeField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tbt_teams_schedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbtTutorials',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.IntegerField(blank=True, null=True)),
                ('tutorial_heading', models.CharField(blank=True, max_length=2048, null=True)),
                ('tutorial_video_link', models.CharField(blank=True, max_length=2048, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbt_tutorials',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TeamEmail',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('team_id', models.BigIntegerField()),
                ('name', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('contact', models.CharField(max_length=15, unique=True)),
                ('discipline_id', models.IntegerField(blank=True, null=True)),
                ('department_id', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=6, null=True)),
                ('address', models.CharField(blank=True, max_length=1000, null=True)),
                ('role', models.IntegerField()),
                ('eyrc_year', models.CharField(blank=True, max_length=1024, null=True)),
                ('eyrc_theme', models.CharField(blank=True, max_length=1024, null=True)),
                ('eyrc_cert', models.CharField(blank=True, max_length=1024, null=True)),
                ('tracking', models.CharField(blank=True, max_length=250, null=True)),
                ('dispatch_date', models.TextField(blank=True, null=True)),
                ('email_flag', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'team_email',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TeamMemberDetail',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('flag', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'team_member_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TempCollege',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clg_id', models.IntegerField(blank=True, null=True)),
                ('region_id', models.IntegerField()),
                ('college_name', models.CharField(max_length=256)),
                ('address', models.CharField(blank=True, max_length=1024, null=True)),
                ('principal_meet', models.IntegerField()),
                ('work_shop', models.IntegerField()),
                ('current_stat', models.IntegerField(blank=True, null=True)),
                ('principalname', models.CharField(blank=True, db_column='PrincipalName', max_length=512, null=True)),
                ('p_number', models.CharField(blank=True, db_column='P_Number', max_length=256, null=True)),
                ('p_number2', models.CharField(blank=True, db_column='P_Number2', max_length=256, null=True)),
                ('p_emailid', models.CharField(blank=True, db_column='P_emailID', max_length=512, null=True)),
                ('loi_status', models.IntegerField()),
                ('college_updated', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'temp_college',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TempElsiCollegeDtls',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('clg_code', models.CharField(blank=True, max_length=512, null=True)),
                ('region_id', models.IntegerField(blank=True, null=True)),
                ('workshop_id', models.IntegerField()),
                ('college_name', models.CharField(max_length=1024)),
                ('abbreviation', models.CharField(blank=True, max_length=128, null=True)),
                ('district', models.CharField(blank=True, max_length=256, null=True)),
                ('address', models.CharField(blank=True, max_length=1024, null=True)),
                ('state', models.CharField(blank=True, max_length=512, null=True)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('college_type', models.CharField(blank=True, max_length=256, null=True)),
                ('principal_meet', models.IntegerField()),
                ('robots_given', models.IntegerField(blank=True, null=True)),
                ('eyic_allowed', models.IntegerField()),
                ('eyrtc_allowed', models.IntegerField()),
                ('tbt_allowed', models.IntegerField()),
                ('content_allowed', models.IntegerField()),
                ('legal_docs', models.IntegerField(blank=True, null=True)),
                ('legal_docs_remarks', models.CharField(blank=True, max_length=1024, null=True)),
                ('loi_status', models.IntegerField()),
                ('loi_format', models.IntegerField(blank=True, null=True)),
                ('loi_remarks', models.CharField(blank=True, max_length=1024, null=True)),
                ('po_status', models.IntegerField(blank=True, null=True)),
                ('po_remark', models.CharField(blank=True, max_length=1024, null=True)),
                ('wo_reg', models.IntegerField()),
                ('wo_invite', models.IntegerField()),
                ('wo_confirm', models.IntegerField()),
                ('wo_attend', models.IntegerField()),
                ('hardware_given', models.CharField(blank=True, max_length=1024, null=True)),
                ('lab_inaugurated', models.IntegerField()),
                ('phase', models.IntegerField()),
                ('eys2016_invites', models.IntegerField()),
                ('team_verify', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'temp_elsi_college_dtls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TempPrincipalMeet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_id', models.IntegerField()),
                ('temp_clg_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('email', models.CharField(blank=True, max_length=250, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=100, null=True)),
                ('alt_contact_num1', models.IntegerField(blank=True, null=True)),
                ('designation', models.CharField(blank=True, max_length=512, null=True)),
                ('clg_type', models.CharField(blank=True, max_length=250, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'temp_principal_meet',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TempWorkshopAttend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temp_clg_id', models.IntegerField()),
                ('clg_id', models.IntegerField(blank=True, null=True)),
                ('region_id', models.IntegerField()),
                ('name', models.CharField(max_length=512)),
                ('email', models.CharField(max_length=256)),
                ('contact_num', models.CharField(max_length=256)),
                ('alternate_email1', models.CharField(blank=True, max_length=512, null=True)),
                ('department', models.CharField(blank=True, max_length=216, null=True)),
                ('role', models.IntegerField(blank=True, null=True)),
                ('workshop_attend', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'temp_workshop_attend',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsersLogin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_id', models.IntegerField(blank=True, null=True)),
                ('username', models.CharField(max_length=512, unique=True)),
                ('password', models.CharField(blank=True, max_length=1024, null=True)),
                ('tbt', models.IntegerField()),
                ('active', models.IntegerField()),
                ('agree', models.IntegerField()),
                ('token', models.CharField(blank=True, max_length=1024, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('login_count', models.IntegerField(blank=True, null=True)),
                ('change_count', models.IntegerField()),
                ('forgot_count', models.IntegerField()),
                ('remember_token', models.CharField(blank=True, max_length=1024, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users_login',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VerificationTokens',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('token', models.CharField(blank=True, max_length=50, null=True)),
                ('expires_in', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'verification_tokens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkshopDtls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_id', models.IntegerField(blank=True, null=True)),
                ('clg_id', models.IntegerField(blank=True, null=True)),
                ('active', models.IntegerField()),
                ('workshop_team', models.CharField(max_length=520)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'workshop_dtls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkshopParticipants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workshop_id', models.IntegerField(blank=True, null=True)),
                ('clg_id', models.IntegerField(blank=True, null=True)),
                ('tch_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'workshop_participants',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkshopShipmentDtls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workshop_id', models.IntegerField(blank=True, null=True)),
                ('clg_id', models.IntegerField(blank=True, null=True)),
                ('shipment_date', models.DateField(blank=True, null=True)),
                ('tracking_no', models.IntegerField(blank=True, null=True)),
                ('mode_of_dispatch', models.CharField(blank=True, max_length=1024, null=True)),
                ('delivery_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'workshop_shipment_dtls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkshopsTakenCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=50)),
                ('active_member', models.IntegerField()),
                ('preparation_status', models.IntegerField()),
                ('willingness_shown', models.IntegerField()),
                ('total_count', models.IntegerField()),
                ('mumbai_workshop', models.IntegerField()),
                ('non_mumbai_workshop', models.IntegerField()),
                ('total_till_date', models.IntegerField()),
                ('past_year', models.IntegerField()),
                ('past_year_mumbai', models.IntegerField()),
                ('past_year_non_mumbai', models.IntegerField()),
            ],
            options={
                'db_table': 'workshops_taken_count',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkshopTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='Name', max_length=255)),
            ],
            options={
                'db_table': 'workshop_team',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkshopTeamStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workshop_id', models.IntegerField()),
                ('workshop_venue', models.CharField(max_length=100)),
                ('district', models.CharField(max_length=50)),
                ('date', models.TextField()),
                ('responder', models.CharField(max_length=50)),
                ('timestamp', models.DateTimeField(null=True)),
                ('willingness_or_unavailability', models.CharField(blank=True, default='None', max_length=50, null=True)),
                ('reason', models.TextField(blank=True, max_length=500, null=True)),
                ('category_of_reason', models.CharField(max_length=50, null=True)),
                ('approval_status', models.CharField(default='None', max_length=50)),
                ('approved_or_rejected_by', models.CharField(default='None', max_length=50)),
            ],
            options={
                'db_table': 'workshop_team_status',
                'managed': False,
            },
        ),
    ]
